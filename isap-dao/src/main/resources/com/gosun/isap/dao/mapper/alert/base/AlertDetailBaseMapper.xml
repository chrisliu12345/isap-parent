<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.gosun.isap.dao.mapper.alert.base.AlertDetailBaseMapper">
  <resultMap id="BaseResultMap" type="com.gosun.isap.dao.po.alert.base.BaseAlertDetail">
    <id column="id" jdbcType="BIGINT" property="id" />
    <result column="alert_id" jdbcType="BIGINT" property="alertId" />
    <result column="user_response_time" jdbcType="INTEGER" property="userResponseTime" />
    <result column="user_process_time" jdbcType="INTEGER" property="userProcessTime" />
    <result column="guard_response_time" jdbcType="INTEGER" property="guardResponseTime" />
    <result column="guard_process_time" jdbcType="INTEGER" property="guardProcessTime" />
    <result column="total_time" jdbcType="INTEGER" property="totalTime" />
    <result column="false_alerts" jdbcType="INTEGER" property="falseAlerts" />
    <result column="confirm_alerts" jdbcType="INTEGER" property="confirmAlerts" />
    <result column="unprocessed_alerts" jdbcType="INTEGER" property="unprocessedAlerts" />
    <result column="is_call_back" jdbcType="BIT" property="isCallBack" />
    <result column="is_second_call_back" jdbcType="BIT" property="isSecondCallBack" />
    <result column="is_arrived" jdbcType="BIT" property="isArrived" />
    <result column="is_question_suspect" jdbcType="BIT" property="isQuestionSuspect" />
    <result column="is_question_suspect_confirmed" jdbcType="BIT" property="isQuestionSuspectConfirmed" />
    <result column="is_user_over_time" jdbcType="BIT" property="isUserOverTime" />
    <result column="is_guard_over_time" jdbcType="BIT" property="isGuardOverTime" />
    <result column="failed_reason_type" jdbcType="TINYINT" property="failedReasonType" />
    <result column="failed_reason" jdbcType="VARCHAR" property="failedReason" />
    <result column="add_time" jdbcType="TIMESTAMP" property="addTime" />
    <result column="update_time" jdbcType="TIMESTAMP" property="updateTime" />
  </resultMap>
  <sql id="Base_Column_List">
    id, alert_id, user_response_time, user_process_time, guard_response_time, guard_process_time, 
    total_time, false_alerts, confirm_alerts, unprocessed_alerts, is_call_back, is_second_call_back, 
    is_arrived, is_question_suspect, is_question_suspect_confirmed, is_user_over_time, 
    is_guard_over_time, failed_reason_type, failed_reason, add_time, update_time
  </sql>
  <select id="selectByPrimaryKey" parameterType="java.lang.Long" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from t_alert_detail
    where id = #{id,jdbcType=BIGINT}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Long">
    delete from t_alert_detail
    where id = #{id,jdbcType=BIGINT}
  </delete>
  <insert id="insert" parameterType="com.gosun.isap.dao.po.alert.base.BaseAlertDetail">
    <selectKey keyProperty="id" order="AFTER" resultType="java.lang.Long">
      SELECT LAST_INSERT_ID()
    </selectKey>
    insert into t_alert_detail (alert_id, user_response_time, user_process_time, 
      guard_response_time, guard_process_time, total_time, 
      false_alerts, confirm_alerts, unprocessed_alerts, 
      is_call_back, is_second_call_back, is_arrived, 
      is_question_suspect, is_question_suspect_confirmed, 
      is_user_over_time, is_guard_over_time, failed_reason_type, 
      failed_reason, add_time, update_time
      )
    values (#{alertId,jdbcType=BIGINT}, #{userResponseTime,jdbcType=INTEGER}, #{userProcessTime,jdbcType=INTEGER}, 
      #{guardResponseTime,jdbcType=INTEGER}, #{guardProcessTime,jdbcType=INTEGER}, #{totalTime,jdbcType=INTEGER}, 
      #{falseAlerts,jdbcType=INTEGER}, #{confirmAlerts,jdbcType=INTEGER}, #{unprocessedAlerts,jdbcType=INTEGER}, 
      #{isCallBack,jdbcType=BIT}, #{isSecondCallBack,jdbcType=BIT}, #{isArrived,jdbcType=BIT}, 
      #{isQuestionSuspect,jdbcType=BIT}, #{isQuestionSuspectConfirmed,jdbcType=BIT}, 
      #{isUserOverTime,jdbcType=BIT}, #{isGuardOverTime,jdbcType=BIT}, #{failedReasonType,jdbcType=TINYINT}, 
      #{failedReason,jdbcType=VARCHAR}, #{addTime,jdbcType=TIMESTAMP}, #{updateTime,jdbcType=TIMESTAMP}
      )
  </insert>
  <insert id="insertSelective" parameterType="com.gosun.isap.dao.po.alert.base.BaseAlertDetail">
    <selectKey keyProperty="id" order="AFTER" resultType="java.lang.Long">
      SELECT LAST_INSERT_ID()
    </selectKey>
    insert into t_alert_detail
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="alertId != null">
        alert_id,
      </if>
      <if test="userResponseTime != null">
        user_response_time,
      </if>
      <if test="userProcessTime != null">
        user_process_time,
      </if>
      <if test="guardResponseTime != null">
        guard_response_time,
      </if>
      <if test="guardProcessTime != null">
        guard_process_time,
      </if>
      <if test="totalTime != null">
        total_time,
      </if>
      <if test="falseAlerts != null">
        false_alerts,
      </if>
      <if test="confirmAlerts != null">
        confirm_alerts,
      </if>
      <if test="unprocessedAlerts != null">
        unprocessed_alerts,
      </if>
      <if test="isCallBack != null">
        is_call_back,
      </if>
      <if test="isSecondCallBack != null">
        is_second_call_back,
      </if>
      <if test="isArrived != null">
        is_arrived,
      </if>
      <if test="isQuestionSuspect != null">
        is_question_suspect,
      </if>
      <if test="isQuestionSuspectConfirmed != null">
        is_question_suspect_confirmed,
      </if>
      <if test="isUserOverTime != null">
        is_user_over_time,
      </if>
      <if test="isGuardOverTime != null">
        is_guard_over_time,
      </if>
      <if test="failedReasonType != null">
        failed_reason_type,
      </if>
      <if test="failedReason != null">
        failed_reason,
      </if>
      <if test="addTime != null">
        add_time,
      </if>
      <if test="updateTime != null">
        update_time,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="alertId != null">
        #{alertId,jdbcType=BIGINT},
      </if>
      <if test="userResponseTime != null">
        #{userResponseTime,jdbcType=INTEGER},
      </if>
      <if test="userProcessTime != null">
        #{userProcessTime,jdbcType=INTEGER},
      </if>
      <if test="guardResponseTime != null">
        #{guardResponseTime,jdbcType=INTEGER},
      </if>
      <if test="guardProcessTime != null">
        #{guardProcessTime,jdbcType=INTEGER},
      </if>
      <if test="totalTime != null">
        #{totalTime,jdbcType=INTEGER},
      </if>
      <if test="falseAlerts != null">
        #{falseAlerts,jdbcType=INTEGER},
      </if>
      <if test="confirmAlerts != null">
        #{confirmAlerts,jdbcType=INTEGER},
      </if>
      <if test="unprocessedAlerts != null">
        #{unprocessedAlerts,jdbcType=INTEGER},
      </if>
      <if test="isCallBack != null">
        #{isCallBack,jdbcType=BIT},
      </if>
      <if test="isSecondCallBack != null">
        #{isSecondCallBack,jdbcType=BIT},
      </if>
      <if test="isArrived != null">
        #{isArrived,jdbcType=BIT},
      </if>
      <if test="isQuestionSuspect != null">
        #{isQuestionSuspect,jdbcType=BIT},
      </if>
      <if test="isQuestionSuspectConfirmed != null">
        #{isQuestionSuspectConfirmed,jdbcType=BIT},
      </if>
      <if test="isUserOverTime != null">
        #{isUserOverTime,jdbcType=BIT},
      </if>
      <if test="isGuardOverTime != null">
        #{isGuardOverTime,jdbcType=BIT},
      </if>
      <if test="failedReasonType != null">
        #{failedReasonType,jdbcType=TINYINT},
      </if>
      <if test="failedReason != null">
        #{failedReason,jdbcType=VARCHAR},
      </if>
      <if test="addTime != null">
        #{addTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateTime != null">
        #{updateTime,jdbcType=TIMESTAMP},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.gosun.isap.dao.po.alert.base.BaseAlertDetail">
    update t_alert_detail
    <set>
      <if test="alertId != null">
        alert_id = #{alertId,jdbcType=BIGINT},
      </if>
      <if test="userResponseTime != null">
        user_response_time = #{userResponseTime,jdbcType=INTEGER},
      </if>
      <if test="userProcessTime != null">
        user_process_time = #{userProcessTime,jdbcType=INTEGER},
      </if>
      <if test="guardResponseTime != null">
        guard_response_time = #{guardResponseTime,jdbcType=INTEGER},
      </if>
      <if test="guardProcessTime != null">
        guard_process_time = #{guardProcessTime,jdbcType=INTEGER},
      </if>
      <if test="totalTime != null">
        total_time = #{totalTime,jdbcType=INTEGER},
      </if>
      <if test="falseAlerts != null">
        false_alerts = #{falseAlerts,jdbcType=INTEGER},
      </if>
      <if test="confirmAlerts != null">
        confirm_alerts = #{confirmAlerts,jdbcType=INTEGER},
      </if>
      <if test="unprocessedAlerts != null">
        unprocessed_alerts = #{unprocessedAlerts,jdbcType=INTEGER},
      </if>
      <if test="isCallBack != null">
        is_call_back = #{isCallBack,jdbcType=BIT},
      </if>
      <if test="isSecondCallBack != null">
        is_second_call_back = #{isSecondCallBack,jdbcType=BIT},
      </if>
      <if test="isArrived != null">
        is_arrived = #{isArrived,jdbcType=BIT},
      </if>
      <if test="isQuestionSuspect != null">
        is_question_suspect = #{isQuestionSuspect,jdbcType=BIT},
      </if>
      <if test="isQuestionSuspectConfirmed != null">
        is_question_suspect_confirmed = #{isQuestionSuspectConfirmed,jdbcType=BIT},
      </if>
      <if test="isUserOverTime != null">
        is_user_over_time = #{isUserOverTime,jdbcType=BIT},
      </if>
      <if test="isGuardOverTime != null">
        is_guard_over_time = #{isGuardOverTime,jdbcType=BIT},
      </if>
      <if test="failedReasonType != null">
        failed_reason_type = #{failedReasonType,jdbcType=TINYINT},
      </if>
      <if test="failedReason != null">
        failed_reason = #{failedReason,jdbcType=VARCHAR},
      </if>
      <if test="addTime != null">
        add_time = #{addTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateTime != null">
        update_time = #{updateTime,jdbcType=TIMESTAMP},
      </if>
    </set>
    where id = #{id,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.gosun.isap.dao.po.alert.base.BaseAlertDetail">
    update t_alert_detail
    set alert_id = #{alertId,jdbcType=BIGINT},
      user_response_time = #{userResponseTime,jdbcType=INTEGER},
      user_process_time = #{userProcessTime,jdbcType=INTEGER},
      guard_response_time = #{guardResponseTime,jdbcType=INTEGER},
      guard_process_time = #{guardProcessTime,jdbcType=INTEGER},
      total_time = #{totalTime,jdbcType=INTEGER},
      false_alerts = #{falseAlerts,jdbcType=INTEGER},
      confirm_alerts = #{confirmAlerts,jdbcType=INTEGER},
      unprocessed_alerts = #{unprocessedAlerts,jdbcType=INTEGER},
      is_call_back = #{isCallBack,jdbcType=BIT},
      is_second_call_back = #{isSecondCallBack,jdbcType=BIT},
      is_arrived = #{isArrived,jdbcType=BIT},
      is_question_suspect = #{isQuestionSuspect,jdbcType=BIT},
      is_question_suspect_confirmed = #{isQuestionSuspectConfirmed,jdbcType=BIT},
      is_user_over_time = #{isUserOverTime,jdbcType=BIT},
      is_guard_over_time = #{isGuardOverTime,jdbcType=BIT},
      failed_reason_type = #{failedReasonType,jdbcType=TINYINT},
      failed_reason = #{failedReason,jdbcType=VARCHAR},
      add_time = #{addTime,jdbcType=TIMESTAMP},
      update_time = #{updateTime,jdbcType=TIMESTAMP}
    where id = #{id,jdbcType=BIGINT}
  </update>
  <select id="selectAll" resultMap="BaseResultMap">
    select
    <include refid="Base_Column_List" /> 
    from t_alert_detail 
    <if test="limit != null and limit.length() > 0">
    limit ${limit}
    </if>
  </select>
  <select id="selectAllAndSort" resultMap="BaseResultMap">
    select
        <include refid="Base_Column_List" /> 
        from t_alert_detail 
        <if test="orderBy != null and orderBy.size() &gt; 0">
            order by
            <foreach collection="orderBy" separator="," item="column">
                ${column}
            </foreach>
        </if>
        <if test="limit != null and limit.length() > 0">
            limit ${limit}
        </if>
  </select>
  <select id="selectByColumn" resultMap="BaseResultMap">
    select
    <include refid="Base_Column_List" /> 
    from t_alert_detail 
        <where>
            <if test="column == null">
                false
            </if>
            <if test="column != null and value != null ">
                ${column} = #{value}
            </if>
            <if test="column != null and value == null">
                ${column} is null
            </if>
        </where>
        <if test="limit != null and limit.length() > 0">
            limit ${limit}
        </if>
  </select>
  <select id="selectByColumnAndSort" resultMap="BaseResultMap">
    select
    <include refid="Base_Column_List" /> 
    from t_alert_detail 
        <where>
            <if test="column == null">
                false
            </if>
            <if test="column != null and value != null ">
                ${column} = #{value}
            </if>
            <if test="column != null and value == null">
                ${column} is null
            </if>
        </where>
        <if test="orderBy != null and orderBy.size() &gt; 0">
            order by
            <foreach collection="orderBy" separator="," item="column">
                ${column}
            </foreach>
        </if>
        <if test="limit != null and limit.length() > 0">
            limit ${limit}
        </if>
  </select>
  <select id="selectFirstByColumn" resultMap="BaseResultMap">
    select
    <include refid="Base_Column_List" /> 
    from t_alert_detail 
        <where>
            <if test="column == null">
                false
            </if>
            <if test="column != null and value != null ">
                ${column} = #{value}
            </if>
            <if test="column != null and value == null">
                ${column} is null
            </if>
        </where>
    limit 1
  </select>
  <select id="selectByColumns" resultMap="BaseResultMap">
    select
    <include refid="Base_Column_List" /> 
    from t_alert_detail
        <where>
            <if test="map == null or map.size() == 0">
                false
            </if>
            <if test="map != null and map.size &gt; 0">
                <foreach collection="map" index="column" item="value">
                    <if test="column != null and value != null">
                        AND ${column} = #{value}
                    </if>
                    <if test="column != null and value == null">
                        AND ${column} is null
                    </if>
                    <if test="map.size() == 1 and column == null">
                        and false
                    </if>
                </foreach>
            </if>
        </where>
        <if test="limit != null and limit.length() > 0">
            limit ${limit}
        </if>
  </select>
  <select id="selectByColumnsAndSort" resultMap="BaseResultMap">
    select
    <include refid="Base_Column_List" /> 
    from t_alert_detail
        <where>
            <if test="map == null or map.size() == 0">
                false
            </if>
            <if test="map != null and map.size &gt; 0">
                <foreach collection="map" index="column" item="value">
                    <if test="column != null and value != null">
                        AND ${column} = #{value}
                    </if>
                    <if test="column != null and value == null">
                        AND ${column} is null
                    </if>
                    <if test="map.size() == 1 and column == null">
                        and false
                    </if>
                </foreach>
            </if>
        </where>
        <if test="orderBy != null and orderBy.size() &gt; 0">
            order by
            <foreach collection="orderBy" separator="," item="column">
                ${column}
            </foreach>
        </if>
        <if test="limit != null and limit.length() > 0">
            limit ${limit}
        </if>
  </select>
  <select id="selectFirstByColumns" resultMap="BaseResultMap">
    select
    <include refid="Base_Column_List" /> 
    from t_alert_detail
        <where>
            <if test="map == null or map.size() == 0">
                false
            </if>
            <if test="map != null and map.size &gt; 0">
                <foreach collection="map" index="column" item="value">
                    <if test="column != null and value != null">
                        AND ${column} = #{value}
                    </if>
                    <if test="column != null and value == null">
                        AND ${column} is null
                    </if>
                    <if test="map.size() == 1 and column == null">
                        and false
                    </if>
                </foreach>
            </if>
        </where>
    limit 1
  </select>
  <select id="totalCount" resultType="int">
    select count(*) from t_alert_detail
  </select>
  <select id="countByColumn" resultType="int">
    select count(*) from t_alert_detail
        <where>
            <if test="column == null">
                false
            </if>
            <if test="column != null and value != null ">
                ${column} = #{value}
            </if>
            <if test="column != null and value == null">
                ${column} is null
            </if>
        </where>
  </select>
  <select id="countByColumns" resultType="int">
    select
    count(*) 
    from t_alert_detail
        <where>
            <if test="map == null or map.size() == 0">
                false
            </if>
            <if test="map != null and map.size &gt; 0">
                <foreach collection="map" index="column" item="value">
                    <if test="column != null and value != null">
                        AND ${column} = #{value}
                    </if>
                    <if test="column != null and value == null">
                        AND ${column} is null
                    </if>
                    <if test="map.size() == 1 and column == null">
                        and false
                    </if>
                </foreach>
            </if>
        </where>
  </select>
  <delete id="deleteByColumn">
    delete from t_alert_detail where 
        <if test="column != null and value != null">
            ${column} = #{value}
        </if>
        <if test="column != null and value == null">
            ${column} is null
        </if>
        <if test="column == null">
            false
        </if>
  </delete>
  <delete id="deleteByColumns">
    delete from t_alert_detail
        <where>
            <if test="map == null or map.size() == 0">
                false
            </if>
            <if test="map != null and map.size &gt; 0">
                <foreach collection="map" index="column" item="value">
                    <if test="column != null and value != null">
                        AND ${column} = #{value}
                    </if>
                    <if test="column != null and value == null">
                        AND ${column} is null
                    </if>
                    <if test="map.size() == 1 and column == null">
                        and false
                    </if>
                </foreach>
            </if>
        </where>
  </delete>
</mapper>