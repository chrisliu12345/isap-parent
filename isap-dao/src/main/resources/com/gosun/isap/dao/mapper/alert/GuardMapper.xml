<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.gosun.isap.dao.mapper.alert.GuardMapper">
    <delete id="deleteById">
        delete from t_guard where id = #{id}
    </delete>
    <delete id="deleteByIds">
        delete from t_guard
        <where>
            <if test="ids == null or ids.size() == 0">
                and false
            </if>
            <if test="ids != null and ids.size() &gt; 0">
                and id in
                <foreach collection="ids" index="index" item="item" separator="," open="(" close=")">
                    #{item}
                </foreach>
            </if>
        </where>
    </delete>


    <resultMap id="BaseResultMap" type="com.gosun.isap.dao.po.alert.Guard">
        <!--
          WARNING - @mbg.generated
          This element is automatically generated by MyBatis Generator, do not modify.
          This element was generated on Sat May 06 17:09:35 CST 2017.
        -->
        <id column="id" jdbcType="BIGINT" property="id"/>
        <result column="name" jdbcType="VARCHAR" property="name"/>
        <result column="phone" jdbcType="CHAR" property="phone"/>
        <result column="guard_desc" jdbcType="VARCHAR" property="guardDesc"/>
        <result column="group_id" jdbcType="BIGINT" property="groupId"/>
        <result column="cid" jdbcType="CHAR" property="cid"/>
        <result column="home_address" jdbcType="VARCHAR" property="homeAddress"/>
        <result column="birthday" jdbcType="DATE" property="birthday"/>
        <result column="add_time" jdbcType="TIMESTAMP" property="addTime"/>
        <result column="update_time" jdbcType="TIMESTAMP" property="updateTime"/>
        <result column="group_name" jdbcType="VARCHAR" property="groupName"/>
    </resultMap>
    <sql id="Base_Column_List">
        <!--
          WARNING - @mbg.generated
          This element is automatically generated by MyBatis Generator, do not modify.
          This element was generated on Sat May 06 17:09:35 CST 2017.
        -->
        id, name, phone, guard_desc, group_id, cid, home_address, birthday, add_time, update_time
    </sql>
    <sql id="SELECT_GUARD">
        select A.id, A.name, A.phone, A.guard_desc, A.group_id, A.add_time, A.update_time,
        B.group_name
        from t_guard A
        left join
        (select id,name as group_name from t_guard_group) as B
        on A.group_id = B.id
    </sql>

    <sql id="SELECT_GUARD_COUNT">
        select count(*) from t_guard
    </sql>
    <select id="listGuards" resultMap="BaseResultMap">
    <include refid="SELECT_GUARD"/>
        <if test="key != null">
            where A.name like '%${key}%' or A.phone like '%${key}%'
        </if>
        <if test="limit != null">
            limit ${limit.limit}
        </if>
    </select>

    <select id="countGuards" resultMap="BaseResultMap">
        <include refid="SELECT_GUARD_COUNT"/>
        <if test="key != null">
            where name like '%${key}%' or phone like '%${key}%'
        </if>
    </select>


    <select id="listGuardsByGroup" resultMap="BaseResultMap">
        <include refid="SELECT_GUARD"/>
        <where>
            A.group_id = #{groupId}
            <if test="key != null">
                and (A.name like '%${key}%' or A.phone like '%${key}%')
            </if>
        </where>

        <if test="orderBy != null and orderBy.size() &gt; 0">
            order by
            <foreach collection="orderBy" separator="," item="column">
                ${column}
            </foreach>
        </if>
        <if test="limit != null">
            limit ${limit.limit}
        </if>
    </select>

    <select id="countGuardsByGroup" resultType="int">
        <include refid="SELECT_GUARD_COUNT"/>
        <where>
            A.group_id = #{groupId}
            <if test="key != null">
                and (name like '%${key}%' or phone like '%${key}%')
            </if>
        </where>
    </select>

    <select id="listGuardsByGroups" resultMap="BaseResultMap">
        <include refid="SELECT_GUARD"/>
        <where>
            <if test="groupIds != null and groupIds.size() &gt; 0">
                and A.group_id in
                <foreach collection="groupIds" index="index" item="item" separator="," open="(" close=")">
                    #{item}
                </foreach>
            </if>
            <if test="key != null">
                and (A.name like '%${key}%' or A.phone like '%${key}%')
            </if>
        </where>

        <if test="orderBy != null and orderBy.size() &gt; 0">
            order by
            <foreach collection="orderBy" separator="," item="column">
                ${column}
            </foreach>
        </if>
        <if test="limit != null">
            limit ${limit.limit}
        </if>
    </select>

    <select id="countGuardsByGroups" resultType="int">
        <include refid="SELECT_GUARD_COUNT"/>
        <where>
            <if test="groupIds != null and groupIds.size() &gt; 0">
                and group_id in
                <foreach collection="groupIds" index="index" item="item" separator="," open="(" close=")">
                    #{item}
                </foreach>
            </if>
            <if test="key != null">
                and (name like '%${key}%' or phone like '%${key}%')
            </if>
        </where>
    </select>

    <select id="getGroupIdByDepartments" resultType="java.lang.Long">
        select group_id from t_guard_group_belong
        <where>
            <if test="ids != null and ids.size() &gt; 0">
                and department_id in
                <foreach collection="ids" index="index" item="item" separator="," open="(" close=")">
                    #{item}
                </foreach>
            </if>
        </where>
    </select>
    <select id="getGroupIdByDepartment" resultType="java.lang.Long">
        select group_id from t_guard_group_belong where department_id = #{id}
    </select>
    <select id="selectById" resultMap="BaseResultMap">
        <include refid="SELECT_GUARD"/>
        where A.id = #{id}
    </select>
    <select id="listAlertIds" resultType="java.lang.Long">
        select alert_id from t_guard_alert
        <where>
            guard_id = #{guardId}
            <if test="start != null">
                and add_time &gt; #{start}
            </if>
            <if test="end != null">
                and add_time &lt; #{end}
            </if>
        </where>
        <if test="orderBy != null and orderBy.size() &gt; 0">
            order by
            <foreach collection="orderBy" separator="," item="column">
                ${column}
            </foreach>
        </if>
        <if test="limit != null">
            limit ${limit.limit}
        </if>
    </select>
    <select id="listUnfinishedAlertsId" resultType="java.lang.Long">
        select id from t_alert where id in (
        select alert_id from t_guard_alert
        <where>
            guard_id = #{guardId}
            <if test="start != null">
                and add_time &gt; #{start}
            </if>
            <if test="end != null">
                and add_time &lt; #{end}
            </if>
        </where>
        ) and status > 19
        <if test="limit != null">
            limit ${limit.limit}
        </if>
    </select>
    <select id="countUnfinishedAlerts" resultType="java.lang.Integer">
        select count(*)  from t_alert where id in (
        select alert_id from t_guard_alert
        <where>
            guard_id = #{guardId}
            <if test="start != null">
                and add_time &gt; #{start}
            </if>
            <if test="end != null">
                and add_time &lt; #{end}
            </if>
        </where>
        ) and status > 19

    </select>

    <select id="listGuardsUnfinishedAlertsId" resultType="java.lang.Long">
        select id from t_alert where id in (
        select alert_id from t_guard_alert
        <where>
            <if test="ids == null or ids.size() == 0">
                and false
            </if>
            <if test="ids != null and ids.size() &gt; 0">
                and guard_id in
                <foreach collection="ids" index="index" item="item" separator="," open="(" close=")">
                    #{item}
                </foreach>
            </if>
            <if test="start != null">
                and add_time &gt; #{start}
            </if>
            <if test="end != null">
                and add_time &lt; #{end}
            </if>
        </where>
        ) and status > 19
        <if test="limit != null">
            limit ${limit.limit}
        </if>
    </select>

    <select id="countGuardsUnfinishedAlerts" resultType="java.lang.Integer">
        select count(*) from t_alert where id in (
        select alert_id from t_guard_alert
        <where>
            <if test="ids == null or ids.size() == 0">
                and false
            </if>
            <if test="ids != null and ids.size() &gt; 0">
                and guard_id in
                <foreach collection="ids" index="index" item="item" separator="," open="(" close=")">
                    #{item}
                </foreach>
            </if>
            <if test="start != null">
                and add_time &gt; #{start}
            </if>
            <if test="end != null">
                and add_time &lt; #{end}
            </if>
        </where>
        ) and status > 19
    </select>

    <select id="listUnfinishedAlerts" resultType="map">
        select A.id as alertId,A.status,A.add_time as alertTime,A.confirm_end_time as startingTime,
        B.reason as failedReason ,C.name as communityName,D.add_time as arrivedTime
        from
        (select * from t_alert
        <where>
            <if test="ids == null or ids.size() == 0">
                and false
            </if>
            <if test="ids != null and ids.size() &gt; 0">
                and id in
                <foreach collection="ids" index="index" item="item" separator="," open="(" close=")">
                    #{item}
                </foreach>
            </if>
        </where>
        ) as A
        left join t_alert_log B
        on A.id = B.alert_id and B.log_type > 19
        left join t_department C
        on A.department_id = C.id
        left join
        t_alert_log D
        on A.id = D.alert_id and D.log_type = 3
    </select>

    <select id="listQuestionedAlertIds" resultType="java.lang.Long">
        select alert_id from t_alert_detail where alert_id in(
        select alert_id from t_guard_alert
        <where>
            guard_id = #{guardId}
            <if test="start != null">
                and add_time &gt; #{start}
            </if>
            <if test="end != null">
                and add_time &lt; #{end}
            </if>
        </where>
        ) and is_question_suspect = 1
        <if test="limit != null">
            limit ${limit.limit}
        </if>
    </select>
    <select id="countQuestionedAlerts" resultType="java.lang.Integer">
        select count(*) from t_alert_detail where alert_id in(
        select alert_id from t_guard_alert
        <where>
            guard_id = #{guardId}
            <if test="start != null">
                and add_time &gt; #{start}
            </if>
            <if test="end != null">
                and add_time &lt; #{end}
            </if>
        </where>
        ) and is_question_suspect = 1
    </select>

    <select id="listGuardsQuestionedAlertIds" resultType="java.lang.Long">
        select alert_id from t_alert_detail where alert_id in(
        select alert_id from t_guard_alert
        <where>
            <if test="ids == null or ids.size() == 0">
                and false
            </if>
            <if test="ids != null and ids.size() &gt; 0">
                and guard_id in
                <foreach collection="ids" index="index" item="item" separator="," open="(" close=")">
                    #{item}
                </foreach>
            </if>
            <if test="start != null">
                and add_time &gt; #{start}
            </if>
            <if test="end != null">
                and add_time &lt; #{end}
            </if>
        </where>
        ) and is_question_suspect = 1
        <if test="limit != null">
            limit ${limit.limit}
        </if>
    </select>

    <select id="countGuardsQuestionedAlerts" resultType="java.lang.Integer">
        select count(*） from t_alert_detail where alert_id in(
        select alert_id from t_guard_alert
        <where>
            <if test="ids == null or ids.size() == 0">
                and false
            </if>
            <if test="ids != null and ids.size() &gt; 0">
                and guard_id in
                <foreach collection="ids" index="index" item="item" separator="," open="(" close=")">
                    #{item}
                </foreach>
            </if>
            <if test="start != null">
                and add_time &gt; #{start}
            </if>
            <if test="end != null">
                and add_time &lt; #{end}
            </if>
        </where>
        ) and is_question_suspect = 1
    </select>

    <select id="countAlerts" resultType="int">
        select count(*) from t_guard_alert
        <where>
            guard_id = #{guardId}
            <if test="start != null">
                and add_time &gt; #{start}
            </if>
            <if test="end != null">
                and add_time &lt; #{end}
            </if>
        </where>
    </select>

    <select id="countFailed" resultType="int">
        select count(*) from t_alert where id in
        (select alert_id from t_guard_alert
        <where>
            guard_id = #{guardId}
            <if test="start != null">
                and add_time &gt; #{start}
            </if>
            <if test="end != null">
                and add_time &lt; #{end}
            </if>
        </where>
        ) and status > 19
    </select>

    <select id="countQuestioned" resultType="int">
        select count(*) from t_alert_detail where alert_id in
        (select alert_id from t_guard_alert
        <where>
            guard_id = #{guardId}
            <if test="start != null">
                and add_time &gt; #{start}
            </if>
            <if test="end != null">
                and add_time &lt; #{end}
            </if>
        </where>
        ) and is_question_suspect = 1
    </select>

    <select id="countQuestionedConfirmed" resultType="int">
        select count(*) from t_alert_detail where alert_id in
        (select alert_id from t_guard_alert
        <where>
            guard_id = #{guardId}
            <if test="start != null">
                and add_time &gt; #{start}
            </if>
            <if test="end != null">
                and add_time &lt; #{end}
            </if>
        </where>
        ) and is_question_suspect = 1 and is_question_suspect_confirmed = 1
    </select>
    <select id="getGuardByAlertId" resultMap="BaseResultMap">
        <include refid="SELECT_GUARD"/>
        where A.id = (select guard_id from t_guard_alert where alert_id = #{alertId} limit 1)
    </select>


    <update id="changeGroup">
        update t_guard set group_id = #{groupId} where id=#{guardId}
    </update>

    <update id="changeGuardsGroup">
        update t_guard set group_id = #{groupId}
        <where>
            <if test="ids == null or ids.size() == 0">
                and false
            </if>
            <if test="ids != null and ids.size() &gt; 0">
                and id in
                <foreach collection="ids" index="index" item="item" separator="," open="(" close=")">
                    #{item}
                </foreach>
            </if>
        </where>
    </update>

    <select id="search" resultMap="BaseResultMap">
        select * from (
        select A.id, A.name, A.phone, A.guard_desc, A.group_id, A.add_time, A.update_time,B.group_name
        from
        (select * from t_guard where name like "%${key}%" or phone like "%${key}%") as A
        left join
        (select id,name as group_name from t_guard_group) as B
        on A.group_id = B.id
        union
        select A.id, A.name, A.phone, A.guard_desc, A.group_id, A.add_time, A.update_time,B.name as group_name
        from
        (select * from t_guard_group where name like "%${key}%")as B
        left join
        t_guard A
        on A.group_id = B.id
        ) as C
        <if test="limit != null">
            limit ${limit.limit}
        </if>
    </select>
    <select id="listQuestionedAlerts" resultType="map">
        select
        A.id as alertId,A.add_time as alertTime,A.confirm_end_time as startingTime,
        B.name as departmentName,
        C.is_question_suspect_confirmed as isConfirmed,
        E.name as guardName,E.phone as guardPhone
        from
        (select * from t_alert
        <where>
            <if test="ids == null or ids.size() == 0">
                and false
            </if>
            <if test="ids != null and ids.size() &gt; 0">
                and id in
                <foreach collection="ids" index="index" item="item" separator="," open="(" close=")">
                    #{item}
                </foreach>
            </if>
        </where>
        ) as A
        left join t_department B
        on A.department_id = B.id
        left join t_alert_detail C
        on A.id = C.alert_id
        left join t_guard_alert D
        on A.id = D.alert_id
        left join t_guard E
        on E.id = D.guard_id
    </select>
    <select id="listAllGuards" resultMap="BaseResultMap">
        <include refid="SELECT_GUARD"/>
        <if test="orderBy != null and orderBy.size() &gt; 0">
            order by
            <foreach collection="orderBy" separator="," item="column">
                ${column}
            </foreach>
        </if>
        <if test="limit != null">
            limit ${limit.limit}
        </if>
    </select>
</mapper>