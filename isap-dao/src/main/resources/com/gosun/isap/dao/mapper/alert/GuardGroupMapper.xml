<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.gosun.isap.dao.mapper.alert.GuardGroupMapper">

    <delete id="deleteGuardGroup">
        delete from t_guard_group where id = #{id}
    </delete>
    <delete id="deleteGuardGroups">
        delete from t_guard_group where id in
        <foreach collection="ids" item="id" index="index" separator="," open="(" close=")">
            #{id}
        </foreach>
    </delete>
    <delete id="unbindDepartment">
        delete from t_guard_group_belong where group_id = #{groupId} and department_id = #{departmentId}
    </delete>
    <delete id="unbindDepartments">
        delete from t_guard_group_belong
        <where>
            group_id = #{groupId}
            <if test="ids == null or ids.size() == 0">
                and false
            </if>
            <if test="ids != null and ids.size() &gt; 0">
                and department_id in
                <foreach collection="ids" index="index" item="item" separator="," open="(" close=")">
                    #{item}
                </foreach>
            </if>
        </where>
    </delete>

    <delete id="clearDepartments">
        delete from t_guard_group_belong
        <where>
            group_id = #{groupId}
        </where>
    </delete>

    <resultMap id="BaseResultMap" type="com.gosun.isap.dao.po.alert.GuardGroup">
        <!--
          WARNING - @mbg.generated
          This element is automatically generated by MyBatis Generator, do not modify.
          This element was generated on Sat May 06 17:09:35 CST 2017.
        -->
        <id column="id" jdbcType="BIGINT" property="id"/>
        <result column="name" jdbcType="VARCHAR" property="name"/>
        <result column="description" jdbcType="VARCHAR" property="description"/>
        <result column="add_time" jdbcType="TIMESTAMP" property="addTime"/>
        <result column="update_time" jdbcType="TIMESTAMP" property="updateTime"/>
        <result column="count_guard" jdbcType="INTEGER" property="countOfGuard"/>
        <result column="count_department" jdbcType="INTEGER" property="countOfDepartment"/>
    </resultMap>
    <sql id="Base_Column_List">
        <!--
          WARNING - @mbg.generated
          This element is automatically generated by MyBatis Generator, do not modify.
          This element was generated on Sat May 06 17:09:35 CST 2017.
        -->
        id, name, description, add_time, update_time
    </sql>

    <sql id="SELECT_GUARD_GROUP">
        select
        A.id, A.name, A.description, A.add_time, A.update_time,
        B.count_guard,C.count_department
        from t_guard_group A
        left join
        (select group_id,count(*) as count_guard from t_guard group by group_id) as B
        on A.id = B.group_id
        left join
        (select group_id,count(*) as count_department from t_guard_group_belong group by group_id)as C
        on A.id = C.group_id
    </sql>

    <select id="listByIds" resultMap="BaseResultMap">
        <include refid="SELECT_GUARD_GROUP"/>
        <where>
            <if test="ids == null or ids.size() == 0">
                and false
            </if>
            <if test="ids != null and ids.size() &gt; 0">
                and A.id in
                <foreach collection="ids" index="index" item="item" separator="," open="(" close=")">
                    #{item}
                </foreach>
            </if>
        </where>
    </select>
    <select id="getGroupByDepartment" resultMap="BaseResultMap">
        <include refid="SELECT_GUARD_GROUP"/>
        where  A.id =
        (select group_id from t_guard_group_belong where department_id = #{departmentId})
    </select>
    <select id="listGroupIdByDepartmentIds" resultType="java.lang.Long">
        select group_id from t_guard_group_belong
        <where>
            <if test="ids != null and ids.size() &gt; 0">
                and department_id in
                <foreach collection="ids" index="index" item="item" separator="," open="(" close=")">
                    #{item}
                </foreach>
            </if>
        </where>
    </select>
    <select id="listGuardGroup" resultMap="BaseResultMap">
        <include refid="SELECT_GUARD_GROUP"/>
        <if test="orderBy != null and orderBy.size() &gt; 0">
            order by
            <foreach collection="orderBy" separator="," item="column">
                ${column}
            </foreach>
        </if>
        <if test="limit != null">
            limit ${limit.limit}
        </if>
    </select>
    <select id="countGuardGroup" resultType="int">
        select count(*) from t_guard_group
    </select>
    <select id="selectById" resultType="com.gosun.isap.dao.po.alert.GuardGroup">
        <include refid="SELECT_GUARD_GROUP"/>
        where A.id = #{id}
    </select>
    <select id="listDepartmentByGroupId" resultType="com.gosun.isap.dao.po.alert.bean.StringIdNameBean">
        select id,name from t_department where id in (select department_id from t_guard_group_belong where group_id =
        #{groupId})
    </select>
    <select id="listDepartmentIds" resultType="java.lang.String">
        select department_id from t_guard_group_belong where id =
        #{groupId}
    </select>
    <select id="listGuardIds" resultType="java.lang.Long">
        select id from t_guard where group_id = #{groupId}
    </select>
    <select id="listAllIds" resultType="java.lang.Long">
        select id from t_guard_group
    </select>
    <select id="listUserCreated" resultType="java.lang.Long">
        select id from t_guard_group where user_id = #{userId}
        union all
        select group_id as id from t_guard_group_belong
        <where>
            <if test="ids != null and ids.size() &gt; 0">
                and department_id in
                <foreach collection="ids" index="index" item="item" separator="," open="(" close=")">
                    #{item}
                </foreach>
            </if>
        </where>
    </select>
    <select id="listGroups" resultType="java.lang.Long">
        select distinct A.group_id from t_guard_group_belong A
        inner join
        (select id from t_department where find_in_set(#{departmentId},parent_ids) or id = #{departmentId}) as B
        on A.department_id = B.id
    </select>
</mapper>