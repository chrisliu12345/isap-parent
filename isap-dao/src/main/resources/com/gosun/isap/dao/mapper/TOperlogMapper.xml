<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.gosun.isap.dao.mapper.TOperlogMapper" >
  <resultMap id="BaseResultMap" type="com.gosun.isap.dao.po.TOperlog" >
    <id column="id" property="id" jdbcType="BIGINT" />
    <result column="oper_name" property="operName" jdbcType="VARCHAR" />
    <result column="oper_time" property="operTime" jdbcType="TIMESTAMP" />
    <result column="ip_address" property="ipAddress" jdbcType="VARCHAR" />
    <result column="service_type" property="serviceType" jdbcType="TINYINT" />
    <result column="oper_type" property="operType" jdbcType="TINYINT" />
    <result column="oper_result" property="operResult" jdbcType="BIT" />
    <result column="description" property="description" jdbcType="VARCHAR" />
    <result column="failure_cause" property="failureCause" jdbcType="VARCHAR" />
  </resultMap>
  <sql id="Example_Where_Clause" >
    <where >
      <foreach collection="oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause" >
    <where >
      <foreach collection="example.oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List" >
    id, oper_name, oper_time, ip_address, service_type, oper_type, oper_result, description, 
    failure_cause
  </sql>
  <select id="selectByExample" resultMap="BaseResultMap" parameterType="com.gosun.isap.dao.po.TOperlogExample" >
    select
    <if test="distinct" >
      distinct
    </if>
    <include refid="Base_Column_List" />
    from t_operlog
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
    <if test="limit != null" >
      <if test="offset != null" >
        limit ${offset}, ${limit}
      </if>
      <if test="offset == null" >
        limit ${limit}
      </if>
    </if>
  </select>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Long" >
    select 
    <include refid="Base_Column_List" />
    from t_operlog
    where id = #{id,jdbcType=BIGINT}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Long" >
    delete from t_operlog
    where id = #{id,jdbcType=BIGINT}
  </delete>
  <delete id="deleteByExample" parameterType="com.gosun.isap.dao.po.TOperlogExample" >
    delete from t_operlog
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.gosun.isap.dao.po.TOperlog" >
    <selectKey resultType="java.lang.Long" keyProperty="id" order="AFTER" >
      SELECT LAST_INSERT_ID()
    </selectKey>
    insert into t_operlog (oper_name, oper_time, ip_address, 
      service_type, oper_type, oper_result, 
      description, failure_cause)
    values (#{operName,jdbcType=VARCHAR}, #{operTime,jdbcType=TIMESTAMP}, #{ipAddress,jdbcType=VARCHAR}, 
      #{serviceType,jdbcType=TINYINT}, #{operType,jdbcType=TINYINT}, #{operResult,jdbcType=BIT}, 
      #{description,jdbcType=VARCHAR}, #{failureCause,jdbcType=VARCHAR})
  </insert>
  <insert id="insertSelective" parameterType="com.gosun.isap.dao.po.TOperlog" >
    <selectKey resultType="java.lang.Long" keyProperty="id" order="AFTER" >
      SELECT LAST_INSERT_ID()
    </selectKey>
    insert into t_operlog
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="operName != null" >
        oper_name,
      </if>
      <if test="operTime != null" >
        oper_time,
      </if>
      <if test="ipAddress != null" >
        ip_address,
      </if>
      <if test="serviceType != null" >
        service_type,
      </if>
      <if test="operType != null" >
        oper_type,
      </if>
      <if test="operResult != null" >
        oper_result,
      </if>
      <if test="description != null" >
        description,
      </if>
      <if test="failureCause != null" >
        failure_cause,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="operName != null" >
        #{operName,jdbcType=VARCHAR},
      </if>
      <if test="operTime != null" >
        #{operTime,jdbcType=TIMESTAMP},
      </if>
      <if test="ipAddress != null" >
        #{ipAddress,jdbcType=VARCHAR},
      </if>
      <if test="serviceType != null" >
        #{serviceType,jdbcType=TINYINT},
      </if>
      <if test="operType != null" >
        #{operType,jdbcType=TINYINT},
      </if>
      <if test="operResult != null" >
        #{operResult,jdbcType=BIT},
      </if>
      <if test="description != null" >
        #{description,jdbcType=VARCHAR},
      </if>
      <if test="failureCause != null" >
        #{failureCause,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.gosun.isap.dao.po.TOperlogExample" resultType="java.lang.Integer" >
    select count(*) from t_operlog
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map" >
    update t_operlog
    <set >
      <if test="record.id != null" >
        id = #{record.id,jdbcType=BIGINT},
      </if>
      <if test="record.operName != null" >
        oper_name = #{record.operName,jdbcType=VARCHAR},
      </if>
      <if test="record.operTime != null" >
        oper_time = #{record.operTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.ipAddress != null" >
        ip_address = #{record.ipAddress,jdbcType=VARCHAR},
      </if>
      <if test="record.serviceType != null" >
        service_type = #{record.serviceType,jdbcType=TINYINT},
      </if>
      <if test="record.operType != null" >
        oper_type = #{record.operType,jdbcType=TINYINT},
      </if>
      <if test="record.operResult != null" >
        oper_result = #{record.operResult,jdbcType=BIT},
      </if>
      <if test="record.description != null" >
        description = #{record.description,jdbcType=VARCHAR},
      </if>
      <if test="record.failureCause != null" >
        failure_cause = #{record.failureCause,jdbcType=VARCHAR},
      </if>
    </set>
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map" >
    update t_operlog
    set id = #{record.id,jdbcType=BIGINT},
      oper_name = #{record.operName,jdbcType=VARCHAR},
      oper_time = #{record.operTime,jdbcType=TIMESTAMP},
      ip_address = #{record.ipAddress,jdbcType=VARCHAR},
      service_type = #{record.serviceType,jdbcType=TINYINT},
      oper_type = #{record.operType,jdbcType=TINYINT},
      oper_result = #{record.operResult,jdbcType=BIT},
      description = #{record.description,jdbcType=VARCHAR},
      failure_cause = #{record.failureCause,jdbcType=VARCHAR}
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.gosun.isap.dao.po.TOperlog" >
    update t_operlog
    <set >
      <if test="operName != null" >
        oper_name = #{operName,jdbcType=VARCHAR},
      </if>
      <if test="operTime != null" >
        oper_time = #{operTime,jdbcType=TIMESTAMP},
      </if>
      <if test="ipAddress != null" >
        ip_address = #{ipAddress,jdbcType=VARCHAR},
      </if>
      <if test="serviceType != null" >
        service_type = #{serviceType,jdbcType=TINYINT},
      </if>
      <if test="operType != null" >
        oper_type = #{operType,jdbcType=TINYINT},
      </if>
      <if test="operResult != null" >
        oper_result = #{operResult,jdbcType=BIT},
      </if>
      <if test="description != null" >
        description = #{description,jdbcType=VARCHAR},
      </if>
      <if test="failureCause != null" >
        failure_cause = #{failureCause,jdbcType=VARCHAR},
      </if>
    </set>
    where id = #{id,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.gosun.isap.dao.po.TOperlog" >
    update t_operlog
    set oper_name = #{operName,jdbcType=VARCHAR},
      oper_time = #{operTime,jdbcType=TIMESTAMP},
      ip_address = #{ipAddress,jdbcType=VARCHAR},
      service_type = #{serviceType,jdbcType=TINYINT},
      oper_type = #{operType,jdbcType=TINYINT},
      oper_result = #{operResult,jdbcType=BIT},
      description = #{description,jdbcType=VARCHAR},
      failure_cause = #{failureCause,jdbcType=VARCHAR}
    where id = #{id,jdbcType=BIGINT}
  </update>
</mapper>